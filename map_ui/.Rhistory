saveWidget(map2 %>% hideGroup("Parking"), file="map.html")
ui <- fluidPage(
leafletOutput("map2", height = 800)
)
server <- function(input, output) {
output$map <- renderLeaflet({map2})
}
shinyApp(ui, server)
?renderLeaflet
ui <- fluidPage(
leafletOutput("map2", height = 800)
)
server <- function(input, output) {
output$map <- renderLeaflet({
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPolylines(data=route) %>%
addMarkers(data=parking, group = "Parking", popup = ~as.character(Name), icon = parkingIcon) %>%
addMarkers(data=start_finish, group = "Start/Finish", popup = ~as.character(Name), icon=startFinishIcons) %>%
addLayersControl(
baseGroups = c("Light", "OSM (default)"),
overlayGroups = c("Start/Finish", "Parking"),
options = layersControlOptions(collapsed = FALSE)
) %>% hideGroup("Parking")
})
}
shinyApp(ui, server)
ui <- fluidPage(
leafletOutput("map", height = 800)
)
server <- function(input, output) {
output$map <- renderLeaflet({
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPolylines(data=route) %>%
addMarkers(data=parking, group = "Parking", popup = ~as.character(Name), icon = parkingIcon) %>%
addMarkers(data=start_finish, group = "Start/Finish", popup = ~as.character(Name), icon=startFinishIcons) %>%
addLayersControl(
baseGroups = c("Light", "OSM (default)"),
overlayGroups = c("Start/Finish", "Parking"),
options = layersControlOptions(collapsed = FALSE)
) %>% hideGroup("Parking")
})
}
shinyApp(ui, server)
library(htmltools)
runApp('em_map.R')
runApp('em_map.R')
ui <- fluidPage(
leafletOutput("map", height = 800),
navbarPage(title = 'Hello, Shiny World!')
)
server <- function(input, output) {
output$map <- renderLeaflet({
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPolylines(data=route) %>%
addMarkers(data=parking, group = "Parking", popup = ~as.character(Name), icon = parkingIcon) %>%
addMarkers(data=start_finish, group = "Start/Finish", popup = ~as.character(Name), icon=startFinishIcons) %>%
addLayersControl(
baseGroups = c("Light", "OSM (default)"),
overlayGroups = c("Start/Finish", "Parking"),
options = layersControlOptions(collapsed = FALSE)
) %>% hideGroup("Parking")
})
}
shinyApp(ui, server)
ui <- fluidPage(
leafletOutput("map", height = 800),
title = 'Hello, Shiny World!'
)
server <- function(input, output) {
output$map <- renderLeaflet({
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPolylines(data=route) %>%
addMarkers(data=parking, group = "Parking", popup = ~as.character(Name), icon = parkingIcon) %>%
addMarkers(data=start_finish, group = "Start/Finish", popup = ~as.character(Name), icon=startFinishIcons) %>%
addLayersControl(
baseGroups = c("Light", "OSM (default)"),
overlayGroups = c("Start/Finish", "Parking"),
options = layersControlOptions(collapsed = FALSE)
) %>% hideGroup("Parking")
})
}
shinyApp(ui, server)
ui <- fluidPage(
title = 'Hello, Shiny World!',
leafletOutput("map", height = 800)
)
server <- function(input, output) {
output$map <- renderLeaflet({
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPolylines(data=route) %>%
addMarkers(data=parking, group = "Parking", popup = ~as.character(Name), icon = parkingIcon) %>%
addMarkers(data=start_finish, group = "Start/Finish", popup = ~as.character(Name), icon=startFinishIcons) %>%
addLayersControl(
baseGroups = c("Light", "OSM (default)"),
overlayGroups = c("Start/Finish", "Parking"),
options = layersControlOptions(collapsed = FALSE)
) %>% hideGroup("Parking")
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Hello Shiny!"),
leafletOutput("map", height = 800)
)
server <- function(input, output) {
output$map <- renderLeaflet({
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPolylines(data=route) %>%
addMarkers(data=parking, group = "Parking", popup = ~as.character(Name), icon = parkingIcon) %>%
addMarkers(data=start_finish, group = "Start/Finish", popup = ~as.character(Name), icon=startFinishIcons) %>%
addLayersControl(
baseGroups = c("Light", "OSM (default)"),
overlayGroups = c("Start/Finish", "Parking"),
options = layersControlOptions(collapsed = FALSE)
) %>% hideGroup("Parking")
})
}
shinyApp(ui, server)
ui <- fluidPage(
titlePanel("Em's Trip Around the Sun Celebratory Run"),
leafletOutput("map", height = 800)
)
server <- function(input, output) {
output$map <- renderLeaflet({
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPolylines(data=route) %>%
addMarkers(data=parking, group = "Parking", popup = ~as.character(Name), icon = parkingIcon) %>%
addMarkers(data=start_finish, group = "Start/Finish", popup = ~as.character(Name), icon=startFinishIcons) %>%
addLayersControl(
baseGroups = c("Light", "OSM (default)"),
overlayGroups = c("Start/Finish", "Parking"),
options = layersControlOptions(collapsed = FALSE)
) %>% hideGroup("Parking")
})
}
shinyApp(ui, server)
library(leaflet)
library(rgdal)
library(shiny)
library(htmlwidgets)
library(htmltools)
route <- readOGR(dsn = "data/route.geojson", layer = "route")
parking <- readOGR(dsn = "data/parking.geojson", layer = "parking")
start_finish <- readOGR(dsn = "data/start_finish.geojson", layer = "start_finish")
parkingIcon <- makeIcon("images/parking.png",
iconWidth = 30, iconHeight = 30)
startFinishIcons <- iconList(
startIcon <- makeIcon("images/start.png",
iconWidth = 30, iconHeight = 30),
finishIcon <- makeIcon("images/finish.png",
iconWidth = 30, iconHeight = 30)
)
ui <- fluidPage(
titlePanel("Em's Trip Around the Sun Celebratory Run"),
leafletOutput("map", height = 800)
)
server <- function(input, output) {
output$map <- renderLeaflet({
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPolylines(data=route) %>%
addMarkers(data=parking, group = "Parking", popup = ~as.character(Name), icon = parkingIcon) %>%
addMarkers(data=start_finish, group = "Start/Finish", popup = ~as.character(Name), icon=startFinishIcons) %>%
addLayersControl(
baseGroups = c("Light", "OSM (default)"),
overlayGroups = c("Start/Finish", "Parking"),
options = layersControlOptions(collapsed = FALSE)
) %>% hideGroup("Parking")
})
}
shinyApp(ui, server)
rsconnect::setAccountInfo(name='em365run', token='AE6ABDD213A7740EA840018C51E8AECB', secret='59OP+09E2e6CX5w9iOR7IckoeVwkIeLN5OFDMsLx')
library(rsconnect)
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
rsconnect::setAccountInfo(name='em365run', token='AE6ABDD213A7740EA840018C51E8AECB', secret='59OP+09E2e6CX5w9iOR7IckoeVwkIeLN5OFDMsLx')
library(rsconnect)
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map/')
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map/')
dev.off()
dev.off()
dev.off()
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map/')
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
runApp('em_map.R')
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
runApp('em_map.R')
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
df <- read.table("/data/location.csv",
header = FALSE)
df <- read.table("data/location.csv",
header = FALSE)
df <- read.table("~/data/location.csv",
header = FALSE)
setwd("/Users/andresgarcia/documents/projects/em_map_gatherer")
getwd()
df <- read.table("/data/location.csv",
header = FALSE)
df <- read.table("data/location.csv",
header = FALSE)
df <- read.table("/Users/andresgarcia/documents/projects/em_map_gatherer/data/location.csv",
header = FALSE)
df <- read.table("/Users/andresgarcia/documents/projects/em_map_gatherer/data/locations.csv",
header = FALSE)
df <- read.table("/Users/andresgarcia/documents/projects/em_map_gatherer/data/locations.csv",
header = FALSE)
df <- read.table("/Users/andresgarcia/documents/projects/em_map_gatherer/data/locations.csv",
header = TRUE)
df <- read.csv("/Users/andresgarcia/documents/projects/em_map_gatherer/data/locations.csv",
header = FALSE)
df
df <- df[,3]
df
df <- read.csv("/Users/andresgarcia/documents/projects/em_map_gatherer/data/locations.csv",
header = FALSE)
df <- df[1:2,]
df
df <- read.csv("/Users/andresgarcia/documents/projects/em_map_gatherer/data/locations.csv",
header = FALSE)
df <- df[,1:2]
df
las_loc <- df[2]
las_loc
las_loc <- df[2,]
las_loc
typeof(df)
df <- read.csv("/Users/andresgarcia/documents/projects/em_map_gatherer/data/locations.csv",
header = FALSE)
typeof(df)
View(df)
length(df)
rows(df)
row(df)
length(row(df))
length(col(df))
col(df)
clear
ls
df <- read.csv("/Users/andresgarcia/documents/projects/em_map_gatherer/data/locations.csv",
header = FALSE)
head(df)
library(tidyverse)
df <- read.csv("/Users/andresgarcia/documents/projects/em_map_gatherer/data/locations.csv",
header = FALSE)
head(df)
tail(df)
typeof(df)
df[V1]
colnames(df)
tail(df, n =1)
typeof(tail(df, n =1))
last_loc <- tail(df, n =1)
last_loc
library(leaflet)
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10)
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addMarkers(lng =-77.087620 , lat = 38.973347)
last_loc[1,]
last_loc[,1]
typeof(last_loc[,1])
lat = last_loc[,1]
lon = last_loc[,2]
as.numeric(lat)
as.numeric(lon)
lon
lat <- last_loc[,1] %>% as.numeric(lat)
lon <- last_loc[,2] %>% as.numeric(lon)
lat
lon
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addMarkers(lng =lon , lat = lat)
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPulseMarkers(lng =lon , lat = lat)
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addMarkers(lng =lon , lat = lat)
install.packages('leaflet.extras')
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPulseMarkers(lng =lon , lat = lat)
map <- leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10)
addPulseMarkers(map, lng = lon, lat = lat)
?addPulseMarkers
map <- leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPulseMarkers(
lng = -118.456554, lat = 34.078039,
label = "This is a label",
icon = makePulseIcon(heartbeat = 0.5)
)
library(leaflet.extras)
map <- leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPulseMarkers(
lng = -118.456554, lat = 34.078039,
label = "This is a label",
icon = makePulseIcon(heartbeat = 0.5)
)
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPulseMarkers(
lng = -118.456554, lat = 34.078039,
label = "This is a label",
icon = makePulseIcon(heartbeat = 0.5)
)
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPulseMarkers(
lng = lon, lat = lat,
label = "This is a label",
icon = makePulseIcon(heartbeat = 0.5)
)
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPulseMarkers(
lng = lon, lat = lat,
label = "Emily's last known location",
icon = makePulseIcon(heartbeat = 0.5)
)
df <- read.csv("https://raw.githubusercontent.com/andGarc/em_map/main/locations.csv",
header = FALSE)
last_loc <- tail(df, n =1)
last_loc
lat <- last_loc[,1] %>% as.numeric(lat)
lon <- last_loc[,2] %>% as.numeric(lon)
lon <- last_loc[,2] %>% as.numeric(lon)
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPulseMarkers(
lng = lon, lat = lat,
label = "Emily's last known location",
icon = makePulseIcon(heartbeat = 0.5)
)
paste("Emily's last known location as of", "55" sep = " ")
paste("Emily's last known location as of", "55" ,sep = " ")
last_loc
last_loc[,3]
time <- last_loc[,3]
paste("Emily's last known location as of", time, sep = " ")
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPulseMarkers(
lng = lon, lat = lat,
label = paste("Emily's last known location as of", time, sep = " "),
icon = makePulseIcon(heartbeat = 0.5)
)
time
df <- read.csv("https://raw.githubusercontent.com/andGarc/em_map/main/locations.csv",
header = FALSE)
last_loc <- tail(df, n =1)
lat <- last_loc[,1] %>% as.numeric(lat)
lon <- last_loc[,2] %>% as.numeric(lon)
time <- last_loc[,3]
leaflet() %>%
addTiles(group = "OSM (default)") %>%
addProviderTiles(providers$Stamen.TonerLite, group = "Toner Lite") %>%
setView(lng = -77.087620, lat = 38.973347, zoom = 10) %>%
addPulseMarkers(
lng = lon, lat = lat,
label = paste("Emily's last known location as of", time, sep = " "),
icon = makePulseIcon(heartbeat = 0.5)
)
shiny::runApp('~/Documents/projects/em_map')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='em365run',
token='AE6ABDD213A7740EA840018C51E8AECB',
secret='59OP+09E2e6CX5w9iOR7IckoeVwkIeLN5OFDMsLx')
library(rsconnect)
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
runApp()
runApp()
runApp()
rsconnect::setAccountInfo(name='em365run',
token='AE6ABDD213A7740EA840018C51E8AECB',
secret='59OP+09E2e6CX5w9iOR7IckoeVwkIeLN5OFDMsLx')
library(rsconnect)
rsconnect::deployApp(/Users/andresgarcia/documents/projects/em_map)
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
shiny::runApp()
runApp()
rsconnect::setAccountInfo(name='em365run',
token='AE6ABDD213A7740EA840018C51E8AECB',
secret='59OP+09E2e6CX5w9iOR7IckoeVwkIeLN5OFDMsLx')
library(rsconnect)
rsconnect::deployApp('path/to/your/app')
rsconnect::deployApp('/Users/andresgarcia/documents/projects/em_map')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(pool)
library(dplyr)
my_db <- dbPool(
RPostgreSQL::PostgreSQL(),
dbname = "em_map",
host = "ec2-54-173-49-209.compute-1.amazonaws.com",
username = "postgres",
password = "postgres"
)
library(RPostgreSQL)
install.packages("RPostgreSQL")
library(RPostgreSQL)
my_db <- dbPool(
RPostgreSQL::PostgreSQL(),
dbname = "em_map",
host = "ec2-54-173-49-209.compute-1.amazonaws.com",
username = "postgres",
password = "postgres"
)
pool <- dbPool(
drv = RPostgreSQL::PostgreSQL(),
dbname = "em_map",
host = "ec2-54-173-49-209.compute-1.amazonaws.com",
user = "postgres",
password = "postgres"
)
pool <- dbPool(
drv = RPostgreSQL::PostgreSQL(),
dbname = "em_map",
host = "ec2-54-173-49-209.compute-1.amazonaws.com",
user = "postgres",
password = "postgres"
)
pool <- dbPool(
drv = RPostgreSQL::PostgreSQL(),
dbname = "em_map",
host = "ec2-54-173-49-209.compute-1.amazonaws.com",
user = "postgres",
password = "postgres"
)
